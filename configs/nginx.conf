# Standard
user  nginx;

# A single worker is enough for load balancing and reverse proxing.
# While disk I/O can block an nginx worker, it's possible to enable
# async read and send for static files.
#
worker_processes 1;

# The limit on the maximum number of open files for worker processes.
# This overrides the OS limit for the user the workers run as:
#   ulimit -a | grep 'open files'
#
# This value must be equal or higher than the worker_connections value.
#
worker_rlimit_nofile 4096;

# Standard
error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
  # The maximum number of simultaneous connections that can be
  # opened by a worker process. This limit is shared between
  # client connections and upstream connections.
  #
  worker_connections 4096;

  # "on" if nginx worker_processes > 1
  #
  accept_mutex off;
}

http {
  # Standard
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  # Logging
  log_format  main  'remote_addr=[$remote_addr] time=[$time_local] duration=[$request_time] '
                    'status=[$status] cache=[$upstream_cache_status] upstream_status=[$upstream_status] '
                    'method=[$request_method] path=[$request_uri] size=[$body_bytes_sent] '
                    '"$remote_user" "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';
  access_log  /var/log/nginx/access.log  main;

  include /etc/nginx/conf.d/*.conf;
}
